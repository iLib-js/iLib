<?xml version="1.0" encoding="UTF-8"?>
<!--
build.xml - build the Qt/QML parts

Copyright Â© 2015, JEDLSoft

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

See the License for the specific language governing permissions and
limitations under the License.
-->
<!-- ======================================================================= -->
<!-- Main build file for the ilib qt bits            -->
<!-- ======================================================================= -->
<project name="ilib" default="all">
	<!-- =================================================================== -->
	<!-- properties                                                          -->
	<!-- =================================================================== -->

	<!-- Give user a chance to override properties without editing this file -->
	<!-- (and without typing -D each time it compiles it)                    -->
	<property file="build.properties"/>
	<property file="../build.properties"/>
	<property file="../js/build.properties"/>
	
	<!-- Properties that can be overridden -->
	<!-- directories -->
	<property name="build.base"						value="${basedir}"/>
	<property name="build.export"					value="${build.base}/../export"/>	
	<property name="build.output"					value="${build.base}/output"/>
	<property name="build.output.qt"				value="${build.base}/output/qt"/>
	<property name="build.filereader"				value="${build.base}/FileReader"/>
	<property name="build.unittest"					value="${build.base}/UnitTest"/>

	<!-- =================================================================== -->
	<!-- Class paths                                                         -->
	<!-- =================================================================== -->
	<path id="project.class.path.base">
		<fileset dir="${build.lib}">
			<include name="**/*.jar"/>
		</fileset>
		<pathelement path="${build.config}"/>
	</path>

	<!-- =================================================================== -->
	<!-- Implement the standard targets                                      -->
	<!-- =================================================================== -->
	<target name="all" depends="export,doc" description="Build everything. This is the target that the build should run."/>

	<target name="clean" depends="run.qmake" description="Remove all generated files to start from scratch">
                <delete dir="${build.filereader}/imports"/>
                <delete dir="${build.output.qt}"/>
		<delete dir="${build.output}"/>
		<sequential>
			<exec osfamily="unix" executable="make" dir="${build.filereader}" failifexecutionfails="true" failonerror="true">
				<arg line="clean"/>
			</exec>
			<exec osfamily="windows" executable="make.exe" dir="${build.filereader}" failifexecutionfails="true"  failonerror="true">
				<arg line="clean"/>
			</exec>
		</sequential>
		<delete>
			<fileset dir="${build.filereader}" includes="Makefile*" />
		</delete>
	</target>
	
	<target name="test.qmake" description="test whether or not we need to run qmake to update the Makefile">
		<uptodate property="qmake.not.needed" targetfile="${build.filereader}/debug">
			<srcfiles dir="${build.filereader}" includes="Makefile*" />
		</uptodate>
	</target>
	
	<target name="run.qmake" depends="test.qmake" unless="qmake.not.needed">
		<exec osfamily="unix" executable="qmake" dir="${build.filereader}" failifexecutionfails="true" failonerror="true">
		</exec>
		<exec osfamily="windows" executable="qmake.exe" dir="${build.filereader}" failifexecutionfails="true"  failonerror="true">
		</exec>
	</target>

	<target name="prepare" description="Prepare all directories that are needed before the project can be built">
		<mkdir dir="${build.output.qt}"/>
		<sequential>
			<exec osfamily="unix" executable="${QTBIN}/qmake" dir="${build.filereader}" failifexecutionfails="true" failonerror="true">
				<arg value="filereader.pro"/>
			</exec>
			<exec osfamily="windows" executable="${QTBIN}/qmake.exe" dir="${build.filereader}" failifexecutionfails="true"  failonerror="true">
				<arg value="filereader.pro"/>
			</exec>
		</sequential>
	</target>

	<!-- =================================================================== -->
	<!-- Create the core jar file                                            -->
	<!-- =================================================================== -->
	<target name="filereader" depends="prepare,run.qmake" description="Build the file reader plugin">
		<exec osfamily="unix" executable="make" dir="${build.filereader}" failifexecutionfails="true" failonerror="true">
		</exec>
		<exec osfamily="windows" executable="make.exe" dir="${build.filereader}" failifexecutionfails="true"  failonerror="true">
		</exec>
	</target>

	<target name="export" description="export all files that other subprojects may need before building">
	</target>

	<target name="dist" depends="filereader" description="Create all distribution objects and exports them to the top level dir for packaging">
		<mkdir dir="${build.export}/qt/${os.name}-${os.arch}/FS"/>
		<mkdir dir= "${build.filereader}/imports/FS"/>
		<copy todir="${build.export}/qt/${os.name}-${os.arch}/FS">
			<fileset dir="${build.output.qt}">
				<include name="*"/>
			</fileset>
			<fileset dir="${build.filereader}">
				<include name="qmldir"/>
			</fileset>
		</copy>
		<copy todir="${build.filereader}/imports/FS">
			<fileset dir="${build.output.qt}">
				<include name="*"/>
			</fileset>
			<fileset dir="${build.filereader}">
				<include name="qmldir"/>
			</fileset>
		</copy>
	</target>
	
	<target name="test.qt" depends="filereader" description="Run the unit tests in the qt test framework. Make sure you have Qt 5.4 or later, and it is the first Qt in your path.">
		<sequential>
			<exec osfamily="unix" executable="${QTBIN}/qmlscene" dir="${build.base}/UnitTest" failifexecutionfails="true" failonerror="true">
				<env key="QML2_IMPORT_PATH" value="../FileReader/imports"/>
				<arg line="TestRunner.qml"/>
			</exec>
			<exec osfamily="windows" executable="${QTBIN}/qmlscene.exe" dir="${build.base}/UnitTest" failifexecutionfails="true"  failonerror="true">
				<env key="QML2_IMPORT_PATH" value="../FileReader/imports"/>
				<arg line="TestRunner.qml"/>
			</exec>
		</sequential>
	</target>

	<target name="test.qt.nodeunit" depends="filereader" description="Run the unit tests in the qt test framework. Make sure you have Qt 5.4 or later, and it is the first Qt in your path.">
		<sequential>
			<exec osfamily="unix" executable="${QTBIN}/qmlscene" dir="${build.base}/NodeunitTest" failifexecutionfails="true" failonerror="true">
				<env key="QML2_IMPORT_PATH" value="../FileReader/imports"/>
				<arg line="NodeunitRun.qml"/>
			</exec>
			<exec osfamily="windows" executable="${QTBIN}/qmlscene.exe" dir="${build.base}/NodeunitTest" failifexecutionfails="true"  failonerror="true">
				<env key="QML2_IMPORT_PATH" value="../FileReader/imports"/>
				<arg line="NodeunitRun.qml"/>
			</exec>
		</sequential>
	</target>
		
	<!-- Should not run the tests from an automated build, because qmlscene doesn't exit at the end. They should
	     only be run by hand. -->
	<target name="test" description="Run all tests and build all reports" />

	<target name="doc" />
	
</project>
