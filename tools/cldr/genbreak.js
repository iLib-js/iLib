/*
 * genbreak.js - ilib tool to generate the ilib format break iteration
 * locale data and testing dadta
 * 
 * Copyright © 2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This code is intended to be run under node.js 
 */

var fs = require('fs');
var util = require('util');
var path = require("path");
var common = require('./common.js')
var UnicodeFile = require('./unifile.js');
var coelesce = common.coelesce;
var Locale = common.Locale;

// var cldr = require("cldr-data");

function usage() {
    console.log("Usage: genbreak [-h] unicodeCharacterDataDir\n" +
            "Generate the break iteration data and tests.\n\n" +
            "-h or --help\n" +
            "  this help\n" +
            "unicodeCharacterDataDir\n" +
            "  path to the directory containing the Unicode Character Database\n");
    process.exit(1);
}

var toDir = "output";
var unicodeCharacterDataDir;

process.argv.forEach(function (val, index, array) {
    if (val === "-h" || val === "--help") {
        usage();
    }
});

if (process.argv.length > 2) {
    unicodeCharacterDataDir = process.argv[2];
} else {
    usage();
}

console.log("genbreak - generate break iteration data and tests.\n" +
        "Copyright (c) 2018 JEDLSoft\n");

console.log("output dir: " + unicodeCharacterDataDir);

if (!fs.existsSync(unicodeCharacterDataDir)) {
    console.error("The Unicode Character Data directory " + unicodeCharacterDataDir + " does not exist.");
    process.exit(2);
}

if (!fs.existsSync(toDir)) {
    common.makeDirs(toDir);
}

// first generate the tests
var wbt = new UnicodeFile({
    path: path.join(unicodeCharacterDataDir, "auxiliary/WordBreakTest.txt")
});

var re = /[0-9A-F][0-9A-F][0-9A-F][0-9A-F]/g;
var len = wbt.length();
var row, match;
var tests = {};

for (var i = 0; i < len; i++ ) {
    row = wbt.get(i);
    
    var str = row[0].trim();
    str = str.substring(2, str.length - 2)

    str = str.replace(re, function(match) {
       return String.fromCharCode(parseInt(match, 16));
    });
    
    var segments = str.split(/ ÷ /g).map(function(segment) {
        return segment.replace(/ × /g, "");
    });
    
    tests[segments.join("")] = segments;
}

// console.log("tests are:");
// console.log(JSON.stringify(tests, undefined, 4));

var testDir = path.join(toDir, "strings-ext/nodeunit");
common.makeDirs(testDir);
var testFile =
    "/*\n" +
    " * wordBreakData.js - word break test data\n" +
    " * \n" +
    " * Copyright © 2018, JEDLSoft\n" +
    " *\n" +
    " * Licensed under the Apache License, Version 2.0 (the \"License\");\n" +
    " * you may not use this file except in compliance with the License.\n" +
    " * You may obtain a copy of the License at\n" +
    " *\n" +
    " *     http://www.apache.org/licenses/LICENSE-2.0\n" +
    " *\n" +
    " * Unless required by applicable law or agreed to in writing, software\n" +
    " * distributed under the License is distributed on an \"AS IS\" BASIS,\n" +
    " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n" +
    " *\n" +
    " * See the License for the specific language governing permissions and\n" +
    " * limitations under the License.\n" +
    " */\n" +
    "/* WARNING: THIS IS A FILE GENERATED BY genbreak.js. DO NOT EDIT BY HAND. */\n" +
    "module.exports = " +
    JSON.stringify(tests, undefined, 4) +
    ";\n";

fs.writeFileSync(path.join(testDir, "wordBreakData.js"), testFile, "utf-8");

console.log("Wrote " + path.join(testDir, "wordBreakData.js"));